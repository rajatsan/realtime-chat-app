{"version":3,"sources":["components/LoginComponent/LoginComponent.jsx","components/LoginComponent/index.js","components/ViewVideoComponent/index.js","components/ViewVideoComponent/ViewVideoComponent.jsx","components/ChatComponent/index.js","components/ChatComponent/ChatComponent.jsx","components/HomeComponent/index.js","components/HomeComponent/HomeComponent.jsx","App.js","serviceWorker.js","index.js","api/index.js"],"names":["initialState","name","username","password","confPassword","signup","userError","passwordError","confirmError","notification","nameError","LoginComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInput","field","e","setState","defineProperty","target","value","validateUsername","onsubmit","arguments","length","undefined","users","indexOf","toLowerCase","isNew","validatePassword","state","validateConfirmPassword","validateName","login","asyncToGenerator","regenerator_default","a","mark","_callee","_this$state","u","p","res","user","wrap","_context","prev","next","abrupt","fetch","sessionApi","method","body","JSON","stringify","headers","sent","json","onLogin","t0","stop","c","n","_this$state2","then","r","status","objectSpread","fetchUsers","toggle","console","log","_this2","react_default","createElement","className","TextField","error","label","onChange","margin","variant","helperText","type","Button","color","onClick","style","width","marginTop","marginBottom","marginLeft","Snackbar","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","React","Component","ViewVideoComponent","handleVideo","stream","video","document","querySelector","srcObject","onloadedmetadata","play","videoSuccess","canvas","context","getContext","height","setInterval","drawImage","socket","emit","toDataURL","videoError","err","componentDidMount","navigator","mediaDevices","getUserMedia","pause","src","getTracks","forEach","track","autoPlay","ChatComponent","keyDown","keyCode","sendMessage","preventDefault","getUser","getEmotion","text","handleTextChange","messages","io","connect","query","concat","on","_ref","emotion","_this3","paddingBottom","map","index","key","onKeyDown","HomeComponent","logout","disconnect","onLogout","getUserList","allusers","filter","getVideos","view","viewVideo","shareVideo","videoUsers","push","components_ViewVideoComponent","imageSrc","allMessages","image","list","_ref2","_ref3","activeUsers","FormControlLabel","control","Checkbox","checked","join","components_ChatComponent","App","isLoading","allUsersApi","result","catch","CircularProgress","components_HomeComponent","components_LoginComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister","module","exports","activeUsersApi","Accept","Content-Type"],"mappings":"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","file":"static/js/main.bd3a49e0.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { headers, sessionApi } from '../../api';\nimport './LoginComponent.css';\n\nconst initialState = {\n  name: '',\n  username: '',\n  password: '',\n  confPassword: '',\n  signup: false,\n  userError: '',\n  passwordError: '',\n  confirmError: '',\n  notification: '',\n  nameError: '',\n}\n\nclass LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleInput = field => e => {\n    this.setState({\n      [field]: e.target.value\n    });\n\n    if (field === 'username') {\n      this.validateUsername(e.target.value)\n    }\n  }\n\n  validateUsername = (username, onsubmit = false) => {\n    if (!username) {\n      this.setState({ userError: 'Username is required!'});\n      return false;\n    };\n\n    if (this.props.users.indexOf(username.toLowerCase()) > -1 && this.isNew()) {\n      this.setState({ userError: 'This username is already taken!' });\n      return false;\n    }\n\n    if (this.props.users.indexOf(username.toLowerCase()) < 0 && !this.isNew() && onsubmit) {\n      this.setState({ userError: 'Username not found!' });\n      return false;\n    }\n\n    this.setState({ userError: '' });\n    return true;\n  }\n\n  validatePassword = () => {\n    if (!this.state.password) {\n      this.setState({ passwordError: 'Password is required!' });\n      return false;\n    }\n    if (this.state.password.length < 4) {\n      this.setState({ passwordError: 'Password should be at least 4 characters long.' });\n      return false;\n    }\n\n    this.setState({ passwordError: '' })\n    return true;\n  }\n\n  validateConfirmPassword = () => {\n    if (!this.state.confPassword) {\n      this.setState({ confirmError: 'Password is required!' });\n      return false;\n    }\n    if (this.state.password !== this.state.confPassword) {\n      this.setState({ confirmError: 'Passwords do not match!' });\n      return false;\n    };\n    this.setState({ confirmError: '' })\n    return true;\n  }\n\n  validateName = () => {\n    if (!this.state.name) {\n      this.setState({ nameError: 'Name is required.'})\n      return false;\n    } \n    this.setState({ nameError: '' });\n    return true;\n  }\n\n  login = async () => {\n    const { username, password } = this.state;\n\n    const u = this.validateUsername(this.state.username, true);\n    const p = this.validatePassword();\n    if (!u || !p) return;\n\n    try {\n      const res = await fetch(sessionApi, {\n        method: 'put',\n        body: JSON.stringify({ username, password }),\n        headers\n      });\n      const user = await res.json();\n      this.props.onLogin(user.username);\n      this.setState({ notification: 'Login successful!' });\n    } catch {\n      this.setState({\n        passwordError: 'Password is invalid!',\n      })\n    }\n  }\n\n  signup = () => {\n    const u = this.validateUsername(this.state.username, true);\n    const p = this.validatePassword();\n    const c = this.validateConfirmPassword();\n    const n = this.validateName();\n    if (!(u && c && p && n)) return;\n\n    const { username, password } = this.state;\n    fetch(sessionApi, {\n      method: 'post',\n      body: JSON.stringify({ username, password }),\n      headers\n    })\n    .then(r => {\n      if (r.status == 200) {\n        this.setState({ ...initialState, signup: false, notification: 'Signup successful!' });\n        this.props.fetchUsers();\n      } else {\n        this.setState({ userError: 'This username is already taken!'})\n      }\n    });\n  }\n\n  isNew = () => {\n    return this.state.signup\n  }\n\n  toggle = () => {\n    this.setState({ ...initialState, signup: !this.state.signup }, console.log(this.state))\n  }\n\n  render() {\n    const isNew = this.isNew();\n    return (\n      <div>\n        <div className='header'>\n          <div className='title'>Real-Time Chat Application</div>\n        </div>\n        <div className='form'>\n          {isNew && (\n            <TextField\n              error={this.state.nameError !== ''}\n              label=\"Name\"\n              onChange={this.handleInput('name')}\n              margin=\"normal\"\n              variant=\"outlined\"\n              helperText={this.state.nameError}\n              value={this.state.name}\n            />\n          )}\n          <TextField\n            error={this.state.userError !== ''}\n            label=\"Username\"\n            onChange={this.handleInput('username')}\n            margin=\"normal\"\n            variant=\"outlined\"\n            helperText={this.state.userError}\n            value={this.state.username}\n          />\n          <TextField\n            label=\"Password\"\n            error={this.state.passwordError !== ''}\n            type=\"password\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.handleInput('password')}\n            helperText={this.state.passwordError}\n            value={this.state.password}\n          />\n\n          {isNew && (\n            <TextField\n              label=\"Confirm Password\"\n              type=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={this.handleInput('confPassword')}\n              helperText={this.state.confirmError}\n              error={this.state.confirmError !== ''}\n              value={this.state.confPassword}\n            />\n          )}\n            \n            <Button \n              variant='contained' \n              color='primary' \n              onClick={isNew ? this.signup : this.login}\n              style={{ \n                width: '120px',\n                marginTop: '10px',\n                marginBottom: '30px'\n              }}\n            >\n              {!isNew ? 'Login' : 'Signup'}\n            </Button>\n\n            <div className='footer'>\n              {this.isNew() ? 'Existing' : 'New'} user?\n              <Button \n                color='secondary'\n                variant='outlined'\n                style={{\n                  marginLeft: '10px',\n                }}\n                onClick={this.toggle}\n              >\n                {isNew ? 'Login' : 'Signup'}\n              </Button>\n            </div>\n          </div>\n          <Snackbar\n            open={this.state.notification !== ''}\n            autoHideDuration={6000}\n            onClose={() => this.setState({ notification: '' })}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={\n              <span id=\"message-id\">{this.state.notification}</span>\n            }\n          />\n      </div>\n      )\n  }\n}\n\nexport default LoginComponent;","import LoginComponent from './LoginComponent';\n\nexport default LoginComponent;","import ViewVideoComponent from './ViewVideoComponent';\n\nexport default ViewVideoComponent;","import React from 'react';\n\nimport './ViewVideoComponent.css';\n\nclass ViewVideoComponent extends React.Component {\n\n  handleVideo = (stream) => {\n    this.stream = stream;\n    const video = document.querySelector('video');\n      video.srcObject = stream;\n      video.onloadedmetadata = function(e) {\n        video.play();\n      }; \n  }\n\n  videoSuccess = (stream) => {\n    this.handleVideo(stream);\n\n      // send image\n      const canvas = document.querySelector('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = 250;\n      canvas.height = 200;\n\n      context.width = canvas.width;\n      context.height = canvas.height;\n\n      setInterval(() => {\n        context.drawImage(this.video,0,0,context.width,context.height);\n        if (this.props.socket)\n          this.props.socket.emit('video', canvas.toDataURL('image/webp'));\n      },5);\n  }\n\n  videoError = (err) => {\n    console.log('got error', err);\n  }\n\n  componentDidMount = () => {\n    this.video = document.querySelector('video');\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia({video: true}).then(stream => \n        this.videoSuccess(stream)\n      );\n    } else {\n      navigator.getUserMedia({video: true}).then(stream => this.videoSuccess(stream))\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.video) {\n      this.video.pause();\n      this.video.src = null;\n    }\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop())\n    }\n  }\n\n  render() {\n    return (\n      <div className='videoContainer'>\n        <video autoPlay={true}/>\n        <div>{this.props.user}</div>\n        <canvas />\n      </div>\n    )\n  }\n}\n\nexport default ViewVideoComponent;","import ChatComponent from './ChatComponent';\n\nexport default ChatComponent;","import React from 'react';\nimport io from 'socket.io-client';\n\nimport './ChatComponent.css';\n\nclass ChatComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      text: '',\n    }\n  }\n\n  componentDidMount() {\n    this.socket = io.connect('', { query: `username=${this.props.user}`});\n    this.socket.on('send message', ({ message, username, emotion }) => {\n      this.setState({\n        messages: this.state.messages.concat([{\n          message, username, emotion\n        }])\n      });\n    })\n  }\n\n  keyDown = e => {\n    if (e.keyCode === 13) {\n      this.sendMessage();\n      e.preventDefault();\n    }\n  }\n\n  getUser = (u) => {\n    if (u === this.props.user) {\n      return 'You';\n    }\n    return u;\n  }\n\n  getEmotion = (text) => {\n    switch (text) {\n      case 'positive':\n        return ':)'\n      case 'negative':\n        return ':('\n      default:\n        return ':|'\n    }\n  }\n\n  sendMessage = () => {\n    if (this.state.text === '') return;\n    this.socket.emit('send message', {\n      message: this.state.text,\n      username: this.props.user,\n    });\n    this.setState({ text: '' });\n  }\n\n  handleTextChange = (e) => {\n    this.setState({ text: e.target.value })\n  }\n\n  render() {\n    return (\n      <div style={{ paddingBottom: '80px' }}>\n        <table>\n          <thead>\n            <tr>\n              <th style={{ width: '15%' }}>User</th>\n              <th style={{ width: '70%' }}>Message</th>\n              <th style={{ width: '15%' }}>Sentiment</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.messages.map((e, index) => (\n              <tr key={index}>\n                <td>{this.getUser(e.username)}</td>\n                <td>{e.message}</td>\n                <td>{this.getEmotion(e.emotion)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        <div className='message'>\n          <textarea\n            value={this.state.text}\n            onKeyDown={this.keyDown}\n            onChange={this.handleTextChange}\n          />\n          <div className='send' onClick={this.sendMessage}>SEND</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChatComponent;","import HomeComponent from './HomeComponent';\n\nexport default HomeComponent;","import React from 'react';\nimport { sessionApi, activeUsersApi } from '../../api';\nimport io from 'socket.io-client';\nimport ViewVideo from '../ViewVideoComponent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport ChatComponent from '../ChatComponent';\n\nimport './HomeComponent.css';\n\nclass HomeComponent extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      allMessages: [],\n      imageSrc: {},\n      shareVideo: false,\n      viewVideo: false,\n      allusers: [],\n      videoUsers: [],\n    }\n  }\n\n  componentDidMount() {\n    this.socket = io.connect('', { query: `username=${this.props.user}`});\n\n    this.socket.on('video', ({ image, user }) => {\n      this.setState({ imageSrc: {\n        ...this.state.imageSrc,\n        [user]: image,\n      }})\n    });\n\n    this.socket.emit('join');\n    this.socket.on('user', (list) => {\n      this.setState({\n        allusers: list\n      })\n    });\n\n    this.socket.on('video toggle', ({ videoUsers }) => {\n      this.setState({ videoUsers });\n    })\n\n    this.socket.on('send message', ({ message }) => {\n      this.setState({\n        allMessages: this.state.allMessages.concat([message])\n      });\n    })\n  }\n\n  componentWillUnmount() {\n    this.socket.emit('leave');\n    this.socket.disconnect();\n  }\n\n  logout = () => {\n    this.socket.emit('leave');\n    this.socket.disconnect();\n    fetch(sessionApi, {\n      method: 'delete'\n    })\n    .then(this.props.onLogout);\n  }\n\n  sendMessage = () => {\n    this.socket.emit('send message', { message: this.state.message, username: this.props.user });\n  }\n\n  getUserList = () => {\n    return this.state.allusers.filter(u => {\n      return u !== this.props.user.toLowerCase()\n    })\n  }\n\n  getVideos = () => {\n    const view = [];\n    const { viewVideo, shareVideo, videoUsers } = this.state;\n    if (shareVideo) {\n      view.push(\n        <ViewVideo socket={this.socket} user={'You'}/>\n      )\n    }\n\n    if (viewVideo) {\n      videoUsers\n      .filter(u => u !== this.props.user)\n      .forEach(u => (\n        view.push(\n          <div className='imageContainer'>\n            <img src={this.state.imageSrc[u]} />\n            <div>{u}</div>\n          </div>\n        )\n      ))\n    }\n\n    return view;\n  }\n\n  render() {\n    const activeUsers = this.getUserList();\n    const { viewVideo, shareVideo } = this.state;\n    return (\n      <div>\n        <div className='header'>\n        <div className='title'>Real-Time Chat Application</div>\n          <Button color='inherit' onClick={this.logout}>Logout</Button>\n        </div>\n\n        <div className='container'>\n\n          <div className='top'>\n            <div className='name'>Welcome, {this.props.user}!</div>\n            <div className='actions'>\n              <FormControlLabel\n                control={\n                  <Checkbox \n                    checked={this.state.viewVideo} \n                    onChange={() => this.setState({ viewVideo: !this.state.viewVideo })}\n                  />\n                }\n                label=\"View Video\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox \n                    checked={this.state.shareVideo} \n                    onChange={() => {\n                      this.socket.emit('video toggle', !this.state.shareVideo)\n                      this.setState({ shareVideo: !this.state.shareVideo })\n                    }}\n                  />\n                }\n                label=\"Share Video\"\n              />\n            </div>\n          </div>\n\n          \n          <div className='online'>\n            {!activeUsers.length && (\n              'Nobody else online right now!'\n            )}\n            {!!activeUsers.length && (\n              `Other online users - ${activeUsers.join(', ')}`\n            )}\n          </div>\n\n          {(viewVideo || shareVideo) && (\n            <div className='videoWrapper'>{this.getVideos()}</div>\n          )}\n\n          <ChatComponent socket={this.socket} user={this.props.user} />\n\n\n        </div>\n\n        {/* <div>Logged in as {this.props.user}</div>\n        <div>\n          <span>Enter message</span>\n          <input onChange={e => this.setState({message: e.target.value})}/>\n        </div>\n        \n        <button onClick={this.sendMessage}>Send message</button>\n        {(this.state.allMessages || []).map(message => \n          <div>{message}</div>)}\n\n        <ViewVideo socket={this.socket}/>\n        <img src={this.state.imageSrc}/> */}\n      </div>\n    )\n  }\n}\n\nexport default HomeComponent;","import React, { Component } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\n\nimport LoginComponent from './components/LoginComponent';\nimport HomeComponent from './components/HomeComponent';\nimport { sessionApi, allUsersApi } from './api';\n\nimport 'typeface-roboto';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    username: '',\n    isLoading: false,\n    users: [],\n  };\n\n  componentDidMount() {\n    this.setState({ isLoading: true });\n\n    // check if user is logged in.\n    fetch(sessionApi)\n      .then(res => res.json())\n      .then(res =>  {\n        if (res.user && res.user.username) {\n          this.setState({ username: res.user.username, isLoading: false })\n        } else {\n          this.setState({ username: '', isLoading: false })\n        }\n      })\n      .catch(err => { this.setState({isLoading: false}); console.log(err)});\n\n      // get all users\n      this.fetchUsers();\n  }\n\n  fetchUsers = () => {\n    fetch(allUsersApi)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          users: result.map(u => u.username.toLowerCase())\n        });\n      })\n  }\n\n  onLogout = () => {\n    this.setState({ username: '' });\n  }\n\n  onLogin = (username) => {\n    this.setState({ username })\n  }\n  \n  render() {\n    if (this.state.isLoading) {\n      return <div className='body'><CircularProgress /></div>\n    }\n\n    return (\n      <div>\n        {this.state.username ? \n          <HomeComponent onLogout={this.onLogout} user={this.state.username} /> \n          : <LoginComponent onLogin={this.onLogin} users={this.state.users} fetchUsers={this.fetchUsers}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  sessionApi: '/api/session',\n  activeUsersApi: '/api/activeUsers',\n  allUsersApi: '/api/users',\n  \n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n}"],"sourceRoot":""}